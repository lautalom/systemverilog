module regfile
		(
		input logic clk, we3,
		input logic [4:0] ra1, ra2, wa3,
		input logic [63:0] wd3,
		output logic [63:0] rd1, rd2
		);
		
	logic [0:63] registers [0:31];
		
		initial 
			begin
			registers = '{default:64'h00000000};
																
			registers[0:31] =
				'{64'h0000000000000000,
				  64'h0000000000000001,
				  64'h0000000000000002,
				  64'h0000000000000003,
				  64'h0000000000000004,
				  64'h0000000000000005,
				  64'h0000000000000006,
				  64'h0000000000000007,
				  64'h0000000000000008,
				  64'h0000000000000009,
				  64'h000000000000000A,
				  64'h000000000000000B,
				  64'h000000000000000C,
				  64'h000000000000000D,
				  64'h000000000000000E,
				  64'h000000000000000F,
				  64'h0000000000000010,
				  64'h0000000000000011,
				  64'h0000000000000012,
				  64'h0000000000000013,
				  64'h0000000000000014,
				  64'h0000000000000015,
				  64'h0000000000000016,
				  64'h0000000000000017,
				  64'h0000000000000018,
				  64'h0000000000000019,
				  64'h000000000000001A,
				  64'h000000000000001B,
				  64'h000000000000001C,
				  64'h000000000000001D,
				  64'h000000000000001E,
				  64'h0000000000000000
				 };
		end
		
		assign rd1 = registers[ra1];
		assign rd2 = registers[ra2];
		
		always @(posedge clk)
			if (we3 & (wa3 !== 5'b11111))
				registers[wa3] = wd3;

endmodule
